;;; -*-  Base: 10; Mode: LISP; Package: USER; Syntax: Common-Lisp; -*-

(in-package :user)

;; Common Lisp version of Emacspeak TTS 

(unless (find-package 'tts)
  (make-package 'tts :use '(lisp)))

(pushnew 'tts *features*)

;;; Variable: *ANNOUNCE*                                     Author: raman
;;; Created: Sat Dec  5 12:30:50 1992
;;; set to nil if speech not connected 
(defvar *announce* nil     "If t announce actions on dectalk")

;;; Function: ANNOUNCE                                       Author: raman
;;; Created: Tue Sep  1 19:40:28 1992

(defun announce (announcement) 
  "If TTS ready announce it"
  (when (and *announce* 
         (find-package 'tts)
             (find :tts  *features*))
    (tts::speak announcement)))



(defun tts-test () 
  "TTS load test."
  (when   (find-package 'tts)
    (tts::tts-open)
    (tts::tts-speak "TTS: Ready to talk.")))

(defsystem tts
    :source-pathname(concatenate 'string
                                 *lisp-code-directory* "/" "emacspeak")
    :package tts
    :finally-do (tts-test)
    :components (
		 (:file "tts"))
:finally-do 
(defun announce (announcement) 
(tts::tts-speak announcement)))

(defun announce (announcement) 
  (when (find-package :tts) 
    (funcall 
 (find-symbol "tts-speak" :tts) 
             announcement )))
